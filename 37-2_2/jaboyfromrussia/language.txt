Ada — мощнейший модульный объектно–ориентированный язык общего назначения, ориентированный на разработку надёжного программного обеспечения.
Язык Ada был создан в 1979–1980 годах па заказу Министерства Oбороны США. Целью проекта было уменьшение количества различных языков, используемых в Министерстве для различных целей (на 1983 год — свыше 450) путем разработки единого языка, удовлетворяющего требованиям Министерства. Для этого была создана рабочая группа HOLWG, которая прежде всего составила набор требований к высокоуровневому языку разработоки для встроенных систем. Эти требования были известны как «стальные» (Steelman language requirements) и делали упор на надёжности, поддерживаемости и эффективности. Среди прочего в них входили обработка исключений, проверка ошибок в процессе выполнения и возможность параллельных вычислений.
После формулирования требований к языку была проведен анализ существующих языков, который показал, что ни один из них не удовлетворяет требованиям в достаточной мере. Был проведен конкурс на разработку нового языка, который выиграл Жан Ишбиа (Jean Ichbiah) из CII Honeywell Bull. В 1979-80 годах проект языка был завершен и одобрен Министерством. Он был основан на Pascal и заимствовал элементы синтаксиса из ALGOL. Первым компилятором языка, прошедшим валидацию, был NYU Ada/Ed translator, сертифицированный в 1983 году.
В том же 1983 году был принят первый стандарт языка ANSI/MIL-STD 1815A, в 1987 году перекочевавший в ISO-8652:1987. Следующим стандартом стал ISO-8652:1995, в котором в Ada (впервые среди всех ISO-стандартизированных языков) была включена поддержка объектно-ориентированного программирования; кроме того, область применимости языка была расширена до численного, финансового и системного программирования.
Особенности языка:
строгая типизация. Работа с объектами, не имеющими типов, невозможна, а автоматические преобразования типов сведены к абсолютному минимуму.
механизм модульности включает три типа программных единиц: задания (единицы параллельного выполнения), пакеты (единицы модульной стурктуры, использующиеся, например, для реализации абстрактных типов данных) и процедуры.
богатый инструментарий отслеживания и обработки ошибок как на этапе компиляции, так и во время выполнения программы. Язык построен таким образом, чтобы как можно большее количество ошибок обнаруживалось на этапе компиляции. Сообщения компилятора об ошибках сделаны максимально информативными. Механизм исключений позволяет обрабатывать ошибки, возникающие на этапе выполнения программы.
динамическая работа с памятью, без обобщённых указателей, зато с объявленными в явном виде типами доступа (access types). Семантика языка позволяет реализовать автоматический сбор мусора, но большинство реализаций по умолчанию не поддерживают его.
одним из требований при разработке языка была максимально лёгкая читаемость текстов программ, даже в ущерб лёгкости написания. Результатом такого подхода стал несколько «тяжеловесный» синтаксис: ключевые слова и операторы (за исключением арифметических) используют слова английского языка без сокращений.
поддержка обобщённого программирования.
параллельное программирование реализовано через механизм рандеву (rendezvous).
В настоящее время существуют компиляторы Ada под практически любую операционную систему, плюс компиляторы в:
C, C++ — AdaMagic;
Java — GNAT (JGNAT), AppletMagic (см. AdaMagic), ObjectAda;
.NET байткод — GNAT (MGNAT, A#);
JavaScript — AdaMagic + EmScripten, A2JS, Ada/Ed + EmScripten.
Язык Ada используется в США и Европе при разработке сложных больших проектов, требующих повышенной безопасности и надёжности, причём, не только в военных, а в любых критических приложениях.
